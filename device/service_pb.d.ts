// @generated by protoc-gen-es v0.2.1 with parameter "target=js+dts"
// @generated from file device/service.proto (package spotsie.device.v1, syntax proto3)
/* eslint-disable */
/* @ts-nocheck */

import type {BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage} from "@bufbuild/protobuf";
import {Message, proto3} from "@bufbuild/protobuf";
import type {Device} from "./device_pb.js";

/**
 * @generated from message spotsie.device.v1.GetDevicesRequest
 */
export declare class GetDevicesRequest extends Message<GetDevicesRequest> {
  constructor(data?: PartialMessage<GetDevicesRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "spotsie.device.v1.GetDevicesRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetDevicesRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetDevicesRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetDevicesRequest;

  static equals(a: GetDevicesRequest | PlainMessage<GetDevicesRequest> | undefined, b: GetDevicesRequest | PlainMessage<GetDevicesRequest> | undefined): boolean;
}

/**
 * @generated from message spotsie.device.v1.GetDevicesResponse
 */
export declare class GetDevicesResponse extends Message<GetDevicesResponse> {
  /**
   * @generated from field: repeated spotsie.device.v1.Device devices = 1;
   */
  devices: Device[];

  constructor(data?: PartialMessage<GetDevicesResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "spotsie.device.v1.GetDevicesResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetDevicesResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetDevicesResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetDevicesResponse;

  static equals(a: GetDevicesResponse | PlainMessage<GetDevicesResponse> | undefined, b: GetDevicesResponse | PlainMessage<GetDevicesResponse> | undefined): boolean;
}

/**
 * @generated from message spotsie.device.v1.AddDeviceRequest
 */
export declare class AddDeviceRequest extends Message<AddDeviceRequest> {
  constructor(data?: PartialMessage<AddDeviceRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "spotsie.device.v1.AddDeviceRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AddDeviceRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AddDeviceRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AddDeviceRequest;

  static equals(a: AddDeviceRequest | PlainMessage<AddDeviceRequest> | undefined, b: AddDeviceRequest | PlainMessage<AddDeviceRequest> | undefined): boolean;
}

/**
 * @generated from message spotsie.device.v1.AddDeviceResponse
 */
export declare class AddDeviceResponse extends Message<AddDeviceResponse> {
  constructor(data?: PartialMessage<AddDeviceResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "spotsie.device.v1.AddDeviceResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AddDeviceResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AddDeviceResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AddDeviceResponse;

  static equals(a: AddDeviceResponse | PlainMessage<AddDeviceResponse> | undefined, b: AddDeviceResponse | PlainMessage<AddDeviceResponse> | undefined): boolean;
}

