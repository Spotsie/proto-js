// @generated by protoc-gen-es v0.2.1 with parameter "target=js+dts"
// @generated from file device/v1/device.proto (package device.v1, syntax proto3)
/* eslint-disable */
/* @ts-nocheck */

import type {BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage, Timestamp} from "@bufbuild/protobuf";
import {Message, proto3} from "@bufbuild/protobuf";

/**
 * @generated from message device.v1.Device
 */
export declare class Device extends Message<Device> {
  /**
   * @generated from field: int64 id = 1;
   */
  id: bigint;

  /**
   * @generated from field: int64 hardware_id = 2;
   */
  hardwareId: bigint;

  /**
   * @generated from field: google.protobuf.Timestamp last_ping = 3;
   */
  lastPing?: Timestamp;

  /**
   * @generated from field: google.protobuf.Timestamp created_at = 4;
   */
  createdAt?: Timestamp;

  /**
   * @generated from field: repeated device.v1.Session sessions = 5;
   */
  sessions: Session[];

  constructor(data?: PartialMessage<Device>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "device.v1.Device";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Device;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Device;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Device;

  static equals(a: Device | PlainMessage<Device> | undefined, b: Device | PlainMessage<Device> | undefined): boolean;
}

/**
 * @generated from message device.v1.Session
 */
export declare class Session extends Message<Session> {
  /**
   * @generated from field: int64 device_id = 1;
   */
  deviceId: bigint;

  /**
   * @generated from field: google.protobuf.Timestamp first_ping_at = 2;
   */
  firstPingAt?: Timestamp;

  /**
   * @generated from field: google.protobuf.Timestamp last_ping_at = 3;
   */
  lastPingAt?: Timestamp;

  constructor(data?: PartialMessage<Session>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "device.v1.Session";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Session;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Session;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Session;

  static equals(a: Session | PlainMessage<Session> | undefined, b: Session | PlainMessage<Session> | undefined): boolean;
}

