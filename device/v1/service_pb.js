// @generated by protoc-gen-es v0.2.1 with parameter "target=js+dts"
// @generated from file device/v1/service.proto (package device.v1, syntax proto3)
/* eslint-disable */
/* @ts-nocheck */

import {Duration, proto3, Timestamp} from "@bufbuild/protobuf";

/**
 * @generated from message device.v1.CreateOneTimeTokenRequest
 */
export const CreateOneTimeTokenRequest = proto3.makeMessageType(
  "device.v1.CreateOneTimeTokenRequest",
  () => [
    { no: 1, name: "token_duration", kind: "message", T: Duration },
  ],
);

/**
 * @generated from message device.v1.CreateOneTimeTokenResponse
 */
export const CreateOneTimeTokenResponse = proto3.makeMessageType(
  "device.v1.CreateOneTimeTokenResponse",
  () => [
    { no: 1, name: "id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 2, name: "token", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "expire_at", kind: "message", T: Timestamp },
  ],
);

/**
 * @generated from message device.v1.UseOneTimeTokenRequest
 */
export const UseOneTimeTokenRequest = proto3.makeMessageType(
  "device.v1.UseOneTimeTokenRequest",
  () => [
    { no: 1, name: "token", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "hardware_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
  ],
);

/**
 * @generated from message device.v1.UseOneTimeTokenResponse
 */
export const UseOneTimeTokenResponse = proto3.makeMessageType(
  "device.v1.UseOneTimeTokenResponse",
  [],
);

/**
 * @generated from message device.v1.CreateFirmwareRequest
 */
export const CreateFirmwareRequest = proto3.makeMessageType(
  "device.v1.CreateFirmwareRequest",
  () => [
    { no: 1, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "major", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 3, name: "minor", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 4, name: "patch", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 5, name: "commit_hash", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 6, name: "file", kind: "scalar", T: 12 /* ScalarType.BYTES */ },
  ],
);

/**
 * @generated from message device.v1.CreateFirmwareResponse
 */
export const CreateFirmwareResponse = proto3.makeMessageType(
  "device.v1.CreateFirmwareResponse",
  () => [
    { no: 1, name: "id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
  ],
);

/**
 * @generated from message device.v1.Semver
 */
export const Semver = proto3.makeMessageType(
  "device.v1.Semver",
  () => [
    { no: 2, name: "major", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 3, name: "minor", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 4, name: "patch", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
  ],
);

/**
 * @generated from message device.v1.GetFirmwareRequest
 */
export const GetFirmwareRequest = proto3.makeMessageType(
  "device.v1.GetFirmwareRequest",
  () => [
    { no: 1, name: "semver", kind: "message", T: Semver, oneof: "version" },
    { no: 2, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */, oneof: "version" },
  ],
);

/**
 * @generated from message device.v1.GetFirmwareResponse
 */
export const GetFirmwareResponse = proto3.makeMessageType(
  "device.v1.GetFirmwareResponse",
  () => [
    { no: 1, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "semver", kind: "message", T: Semver },
    { no: 3, name: "file", kind: "scalar", T: 12 /* ScalarType.BYTES */ },
  ],
);

