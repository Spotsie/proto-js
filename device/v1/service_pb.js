// @generated by protoc-gen-es v1.0.0 with parameter "target=js+dts"
// @generated from file device/v1/service.proto (package device.v1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import { Duration, proto3, Timestamp } from "@bufbuild/protobuf";
import { Page, Pagination, Sort } from "../../domain/v1/domain_pb.js";
import { Device, Firmware, Semver } from "./device_pb.js";

/**
 * Get all devices in specified organization
 *
 * @generated from message device.v1.GetDevicesRequest
 */
export const GetDevicesRequest = proto3.makeMessageType(
  "device.v1.GetDevicesRequest",
  () => [
    { no: 1, name: "organization_id", kind: "scalar", T: 3 /* ScalarType.INT64 */, opt: true },
    { no: 2, name: "page", kind: "message", T: Page },
    { no: 3, name: "sort", kind: "message", T: Sort, opt: true },
  ],
);

/**
 * @generated from message device.v1.GetDevicesResponse
 */
export const GetDevicesResponse = proto3.makeMessageType(
  "device.v1.GetDevicesResponse",
  () => [
    { no: 1, name: "devices", kind: "message", T: Device, repeated: true },
    { no: 2, name: "pagination", kind: "message", T: Pagination },
  ],
);

/**
 * Get a device by hardware ID
 *
 * @generated from message device.v1.GetDeviceRequest
 */
export const GetDeviceRequest = proto3.makeMessageType(
  "device.v1.GetDeviceRequest",
  () => [
    { no: 1, name: "hardware_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
  ],
);

/**
 * @generated from message device.v1.GetDeviceResponse
 */
export const GetDeviceResponse = proto3.makeMessageType(
  "device.v1.GetDeviceResponse",
  () => [
    { no: 1, name: "device", kind: "message", T: Device },
  ],
);

/**
 * @generated from message device.v1.CreateOneTimeTokenRequest
 */
export const CreateOneTimeTokenRequest = proto3.makeMessageType(
  "device.v1.CreateOneTimeTokenRequest",
  () => [
    { no: 1, name: "token_duration", kind: "message", T: Duration },
  ],
);

/**
 * @generated from message device.v1.CreateOneTimeTokenResponse
 */
export const CreateOneTimeTokenResponse = proto3.makeMessageType(
  "device.v1.CreateOneTimeTokenResponse",
  () => [
    { no: 1, name: "id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 2, name: "token", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "expire_at", kind: "message", T: Timestamp },
  ],
);

/**
 * @generated from message device.v1.UseOneTimeTokenRequest
 */
export const UseOneTimeTokenRequest = proto3.makeMessageType(
  "device.v1.UseOneTimeTokenRequest",
  () => [
    { no: 1, name: "token", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ],
);

/**
 * @generated from message device.v1.UseOneTimeTokenResponse
 */
export const UseOneTimeTokenResponse = proto3.makeMessageType(
  "device.v1.UseOneTimeTokenResponse",
  [],
);

/**
 * @generated from message device.v1.CreateFirmwareRequest
 */
export const CreateFirmwareRequest = proto3.makeMessageType(
  "device.v1.CreateFirmwareRequest",
  () => [
    { no: 1, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "major", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 3, name: "minor", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 4, name: "patch", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 5, name: "commit_hash", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 6, name: "file", kind: "scalar", T: 12 /* ScalarType.BYTES */ },
  ],
);

/**
 * @generated from message device.v1.CreateFirmwareResponse
 */
export const CreateFirmwareResponse = proto3.makeMessageType(
  "device.v1.CreateFirmwareResponse",
  () => [
    { no: 1, name: "id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
  ],
);

/**
 * @generated from message device.v1.GetFirmwareRequest
 */
export const GetFirmwareRequest = proto3.makeMessageType(
  "device.v1.GetFirmwareRequest",
  () => [
    { no: 1, name: "semver", kind: "message", T: Semver, oneof: "version" },
    { no: 2, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */, oneof: "version" },
  ],
);

/**
 * @generated from message device.v1.GetFirmwareResponse
 */
export const GetFirmwareResponse = proto3.makeMessageType(
  "device.v1.GetFirmwareResponse",
  () => [
    { no: 1, name: "firmware", kind: "message", T: Firmware },
  ],
);

