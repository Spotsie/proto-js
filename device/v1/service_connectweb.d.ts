// @generated by protoc-gen-connect-web v0.9.1
// @generated from file device/v1/service.proto (package device.v1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import { CreateFirmwareRequest, CreateFirmwareResponse, CreateOneTimeTokenRequest, CreateOneTimeTokenResponse, GetDeviceRequest, GetDeviceResponse, GetDevicesRequest, GetDevicesResponse, GetFirmwareRequest, GetFirmwareResponse, UseOneTimeTokenRequest, UseOneTimeTokenResponse } from "./service_pb.js";
import { MethodKind } from "@bufbuild/protobuf";

/**
 * @generated from service device.v1.DeviceService
 */
export declare const DeviceService: {
  readonly typeName: "device.v1.DeviceService",
  readonly methods: {
    /**
     * Device ops
     *
     * @generated from rpc device.v1.DeviceService.GetDevices
     */
    readonly getDevices: {
      readonly name: "GetDevices",
      readonly I: typeof GetDevicesRequest,
      readonly O: typeof GetDevicesResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * @generated from rpc device.v1.DeviceService.GetDevice
     */
    readonly getDevice: {
      readonly name: "GetDevice",
      readonly I: typeof GetDeviceRequest,
      readonly O: typeof GetDeviceResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * One time token ops
     *
     * @generated from rpc device.v1.DeviceService.CreateOneTimeToken
     */
    readonly createOneTimeToken: {
      readonly name: "CreateOneTimeToken",
      readonly I: typeof CreateOneTimeTokenRequest,
      readonly O: typeof CreateOneTimeTokenResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * @generated from rpc device.v1.DeviceService.UseOneTimeToken
     */
    readonly useOneTimeToken: {
      readonly name: "UseOneTimeToken",
      readonly I: typeof UseOneTimeTokenRequest,
      readonly O: typeof UseOneTimeTokenResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * Firmware ops
     *
     * @generated from rpc device.v1.DeviceService.CreateFirmware
     */
    readonly createFirmware: {
      readonly name: "CreateFirmware",
      readonly I: typeof CreateFirmwareRequest,
      readonly O: typeof CreateFirmwareResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * @generated from rpc device.v1.DeviceService.GetFirmware
     */
    readonly getFirmware: {
      readonly name: "GetFirmware",
      readonly I: typeof GetFirmwareRequest,
      readonly O: typeof GetFirmwareResponse,
      readonly kind: MethodKind.Unary,
    },
  }
};

