// @generated by protoc-gen-es v0.2.1 with parameter "target=js+dts"
// @generated from file debug/service.proto (package spotsie.debug.v1, syntax proto3)
/* eslint-disable */
/* @ts-nocheck */

import type {BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage, Timestamp} from "@bufbuild/protobuf";
import {Message, proto3} from "@bufbuild/protobuf";
import type {Tick} from "./debug_pb.js";

/**
 * Get ticks in specified time range
 *
 * @generated from message spotsie.debug.v1.GetTicksRequest
 */
export declare class GetTicksRequest extends Message<GetTicksRequest> {
  /**
   * @generated from field: google.protobuf.Timestamp from_time = 1;
   */
  fromTime?: Timestamp;

  /**
   * @generated from field: google.protobuf.Timestamp to_time = 2;
   */
  toTime?: Timestamp;

  constructor(data?: PartialMessage<GetTicksRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "spotsie.debug.v1.GetTicksRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetTicksRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetTicksRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetTicksRequest;

  static equals(a: GetTicksRequest | PlainMessage<GetTicksRequest> | undefined, b: GetTicksRequest | PlainMessage<GetTicksRequest> | undefined): boolean;
}

/**
 * @generated from message spotsie.debug.v1.GetTicksResponse
 */
export declare class GetTicksResponse extends Message<GetTicksResponse> {
  /**
   * @generated from field: repeated spotsie.debug.v1.Tick ticks = 1;
   */
  ticks: Tick[];

  constructor(data?: PartialMessage<GetTicksResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "spotsie.debug.v1.GetTicksResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetTicksResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetTicksResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetTicksResponse;

  static equals(a: GetTicksResponse | PlainMessage<GetTicksResponse> | undefined, b: GetTicksResponse | PlainMessage<GetTicksResponse> | undefined): boolean;
}

/**
 * @generated from message spotsie.debug.v1.TickStreamRequest
 */
export declare class TickStreamRequest extends Message<TickStreamRequest> {
  constructor(data?: PartialMessage<TickStreamRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "spotsie.debug.v1.TickStreamRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TickStreamRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TickStreamRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TickStreamRequest;

  static equals(a: TickStreamRequest | PlainMessage<TickStreamRequest> | undefined, b: TickStreamRequest | PlainMessage<TickStreamRequest> | undefined): boolean;
}

/**
 * @generated from message spotsie.debug.v1.TickStreamResponse
 */
export declare class TickStreamResponse extends Message<TickStreamResponse> {
  /**
   * @generated from field: spotsie.debug.v1.Tick tick = 1;
   */
  tick?: Tick;

  constructor(data?: PartialMessage<TickStreamResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "spotsie.debug.v1.TickStreamResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TickStreamResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TickStreamResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TickStreamResponse;

  static equals(a: TickStreamResponse | PlainMessage<TickStreamResponse> | undefined, b: TickStreamResponse | PlainMessage<TickStreamResponse> | undefined): boolean;
}

