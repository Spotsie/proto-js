// @generated by protoc-gen-connect-query v0.4.1
// @generated from file subject/v1/service.proto (package subject.v1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import { createQueryService } from "@bufbuild/connect-query";
import { MethodKind } from "@bufbuild/protobuf";
import { GetAllSubjectsRequest, GetAllSubjectsResponse, GetLatestSubjectsTelemetryRequest, GetLatestSubjectsTelemetryResponse, GetSubjectsTelemetryRequest, GetSubjectsTelemetryResponse } from "./service_pb.js";

export const typeName = "subject.v1.SubjectService";

/**
 * @generated from rpc subject.v1.SubjectService.GetAllSubjects
 */
export const getAllSubjects = createQueryService({
  service: {
    methods: {
      getAllSubjects: {
        name: "GetAllSubjects",
        kind: MethodKind.Unary,
        I: GetAllSubjectsRequest,
        O: GetAllSubjectsResponse,
      },
    },
    typeName: "subject.v1.SubjectService",
  },
}).getAllSubjects;

/**
 * Retrieves all telemetry data for specified subjects in selected time period
 *
 * @generated from rpc subject.v1.SubjectService.GetSubjectsTelemetry
 */
export const getSubjectsTelemetry = createQueryService({
  service: {
    methods: {
      getSubjectsTelemetry: {
        name: "GetSubjectsTelemetry",
        kind: MethodKind.Unary,
        I: GetSubjectsTelemetryRequest,
        O: GetSubjectsTelemetryResponse,
      },
    },
    typeName: "subject.v1.SubjectService",
  },
}).getSubjectsTelemetry;

/**
 * Retrieves only the most recent sample of telemetry data for specified subjects
 *
 * @generated from rpc subject.v1.SubjectService.GetLatestSubjectsTelemetry
 */
export const getLatestSubjectsTelemetry = createQueryService({
  service: {
    methods: {
      getLatestSubjectsTelemetry: {
        name: "GetLatestSubjectsTelemetry",
        kind: MethodKind.Unary,
        I: GetLatestSubjectsTelemetryRequest,
        O: GetLatestSubjectsTelemetryResponse,
      },
    },
    typeName: "subject.v1.SubjectService",
  },
}).getLatestSubjectsTelemetry;
