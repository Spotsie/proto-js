// @generated by protoc-gen-es v1.2.1
// @generated from file subject/v1/service.proto (package subject.v1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage, Timestamp } from "@bufbuild/protobuf";
import { Message, proto3 } from "@bufbuild/protobuf";
import type { Subject, TimePeriod } from "../../domain/v1/domain_pb.js";
import type { BatteryTelemetry, TemperatureTelemetry } from "./subject_pb.js";

/**
 * @generated from message subject.v1.GetAllSubjectsRequest
 */
export declare class GetAllSubjectsRequest extends Message<GetAllSubjectsRequest> {
  /**
   * @generated from field: int32 organization_id = 1;
   */
  organizationId: number;

  /**
   * @generated from field: google.protobuf.Timestamp from_time = 2;
   */
  fromTime?: Timestamp;

  /**
   * @generated from field: google.protobuf.Timestamp to_time = 3;
   */
  toTime?: Timestamp;

  constructor(data?: PartialMessage<GetAllSubjectsRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "subject.v1.GetAllSubjectsRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetAllSubjectsRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetAllSubjectsRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetAllSubjectsRequest;

  static equals(a: GetAllSubjectsRequest | PlainMessage<GetAllSubjectsRequest> | undefined, b: GetAllSubjectsRequest | PlainMessage<GetAllSubjectsRequest> | undefined): boolean;
}

/**
 * @generated from message subject.v1.GetAllSubjectsResponse
 */
export declare class GetAllSubjectsResponse extends Message<GetAllSubjectsResponse> {
  /**
   * @generated from field: repeated domain.v1.Subject subjects = 1;
   */
  subjects: Subject[];

  constructor(data?: PartialMessage<GetAllSubjectsResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "subject.v1.GetAllSubjectsResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetAllSubjectsResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetAllSubjectsResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetAllSubjectsResponse;

  static equals(a: GetAllSubjectsResponse | PlainMessage<GetAllSubjectsResponse> | undefined, b: GetAllSubjectsResponse | PlainMessage<GetAllSubjectsResponse> | undefined): boolean;
}

/**
 * @generated from message subject.v1.GetSubjectsTelemetryRequest
 */
export declare class GetSubjectsTelemetryRequest extends Message<GetSubjectsTelemetryRequest> {
  /**
   * @generated from field: repeated domain.v1.Subject subjects = 1;
   */
  subjects: Subject[];

  /**
   * @generated from field: domain.v1.TimePeriod time = 2;
   */
  time?: TimePeriod;

  constructor(data?: PartialMessage<GetSubjectsTelemetryRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "subject.v1.GetSubjectsTelemetryRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetSubjectsTelemetryRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetSubjectsTelemetryRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetSubjectsTelemetryRequest;

  static equals(a: GetSubjectsTelemetryRequest | PlainMessage<GetSubjectsTelemetryRequest> | undefined, b: GetSubjectsTelemetryRequest | PlainMessage<GetSubjectsTelemetryRequest> | undefined): boolean;
}

/**
 * @generated from message subject.v1.GetSubjectsTelemetryResponse
 */
export declare class GetSubjectsTelemetryResponse extends Message<GetSubjectsTelemetryResponse> {
  /**
   * @generated from field: repeated subject.v1.GetSubjectsTelemetryResponse.SubjectTelemetry subject_telemetries = 4;
   */
  subjectTelemetries: GetSubjectsTelemetryResponse_SubjectTelemetry[];

  constructor(data?: PartialMessage<GetSubjectsTelemetryResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "subject.v1.GetSubjectsTelemetryResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetSubjectsTelemetryResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetSubjectsTelemetryResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetSubjectsTelemetryResponse;

  static equals(a: GetSubjectsTelemetryResponse | PlainMessage<GetSubjectsTelemetryResponse> | undefined, b: GetSubjectsTelemetryResponse | PlainMessage<GetSubjectsTelemetryResponse> | undefined): boolean;
}

/**
 * @generated from message subject.v1.GetSubjectsTelemetryResponse.SubjectTelemetry
 */
export declare class GetSubjectsTelemetryResponse_SubjectTelemetry extends Message<GetSubjectsTelemetryResponse_SubjectTelemetry> {
  /**
   * @generated from field: domain.v1.Subject subject = 1;
   */
  subject?: Subject;

  /**
   * @generated from field: repeated subject.v1.TemperatureTelemetry temperature = 2;
   */
  temperature: TemperatureTelemetry[];

  /**
   * @generated from field: repeated subject.v1.BatteryTelemetry battery = 3;
   */
  battery: BatteryTelemetry[];

  constructor(data?: PartialMessage<GetSubjectsTelemetryResponse_SubjectTelemetry>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "subject.v1.GetSubjectsTelemetryResponse.SubjectTelemetry";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetSubjectsTelemetryResponse_SubjectTelemetry;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetSubjectsTelemetryResponse_SubjectTelemetry;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetSubjectsTelemetryResponse_SubjectTelemetry;

  static equals(a: GetSubjectsTelemetryResponse_SubjectTelemetry | PlainMessage<GetSubjectsTelemetryResponse_SubjectTelemetry> | undefined, b: GetSubjectsTelemetryResponse_SubjectTelemetry | PlainMessage<GetSubjectsTelemetryResponse_SubjectTelemetry> | undefined): boolean;
}

/**
 * @generated from message subject.v1.GetLatestSubjectsTelemetryRequest
 */
export declare class GetLatestSubjectsTelemetryRequest extends Message<GetLatestSubjectsTelemetryRequest> {
  /**
   * @generated from field: repeated domain.v1.Subject subjects = 1;
   */
  subjects: Subject[];

  constructor(data?: PartialMessage<GetLatestSubjectsTelemetryRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "subject.v1.GetLatestSubjectsTelemetryRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetLatestSubjectsTelemetryRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetLatestSubjectsTelemetryRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetLatestSubjectsTelemetryRequest;

  static equals(a: GetLatestSubjectsTelemetryRequest | PlainMessage<GetLatestSubjectsTelemetryRequest> | undefined, b: GetLatestSubjectsTelemetryRequest | PlainMessage<GetLatestSubjectsTelemetryRequest> | undefined): boolean;
}

/**
 * @generated from message subject.v1.GetLatestSubjectsTelemetryResponse
 */
export declare class GetLatestSubjectsTelemetryResponse extends Message<GetLatestSubjectsTelemetryResponse> {
  /**
   * @generated from field: repeated subject.v1.GetLatestSubjectsTelemetryResponse.LatestSubjectTelemetry subject_telemetries = 4;
   */
  subjectTelemetries: GetLatestSubjectsTelemetryResponse_LatestSubjectTelemetry[];

  constructor(data?: PartialMessage<GetLatestSubjectsTelemetryResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "subject.v1.GetLatestSubjectsTelemetryResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetLatestSubjectsTelemetryResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetLatestSubjectsTelemetryResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetLatestSubjectsTelemetryResponse;

  static equals(a: GetLatestSubjectsTelemetryResponse | PlainMessage<GetLatestSubjectsTelemetryResponse> | undefined, b: GetLatestSubjectsTelemetryResponse | PlainMessage<GetLatestSubjectsTelemetryResponse> | undefined): boolean;
}

/**
 * @generated from message subject.v1.GetLatestSubjectsTelemetryResponse.LatestSubjectTelemetry
 */
export declare class GetLatestSubjectsTelemetryResponse_LatestSubjectTelemetry extends Message<GetLatestSubjectsTelemetryResponse_LatestSubjectTelemetry> {
  /**
   * @generated from field: domain.v1.Subject subject = 1;
   */
  subject?: Subject;

  /**
   * @generated from field: subject.v1.TemperatureTelemetry temperature = 2;
   */
  temperature?: TemperatureTelemetry;

  /**
   * @generated from field: subject.v1.BatteryTelemetry battery = 3;
   */
  battery?: BatteryTelemetry;

  constructor(data?: PartialMessage<GetLatestSubjectsTelemetryResponse_LatestSubjectTelemetry>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "subject.v1.GetLatestSubjectsTelemetryResponse.LatestSubjectTelemetry";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetLatestSubjectsTelemetryResponse_LatestSubjectTelemetry;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetLatestSubjectsTelemetryResponse_LatestSubjectTelemetry;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetLatestSubjectsTelemetryResponse_LatestSubjectTelemetry;

  static equals(a: GetLatestSubjectsTelemetryResponse_LatestSubjectTelemetry | PlainMessage<GetLatestSubjectsTelemetryResponse_LatestSubjectTelemetry> | undefined, b: GetLatestSubjectsTelemetryResponse_LatestSubjectTelemetry | PlainMessage<GetLatestSubjectsTelemetryResponse_LatestSubjectTelemetry> | undefined): boolean;
}

