// @generated by protoc-gen-es v1.3.0
// @generated from file telemetry/v1/service.proto (package telemetry.v1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage, Timestamp } from "@bufbuild/protobuf";
import { Message, proto3 } from "@bufbuild/protobuf";
import type { Beacon } from "../../domain/v1/domain_pb.js";
import type { BatteryLog, Beacon as Beacon$1, ButtonPressLog, MovementLog, TemperatureLog } from "./telemetry_pb.js";

/**
 * common/utility messages
 *
 * @generated from message telemetry.v1.BeaconFilter
 */
export declare class BeaconFilter extends Message<BeaconFilter> {
  /**
   * @generated from oneof telemetry.v1.BeaconFilter.type
   */
  type: {
    /**
     * @generated from field: domain.v1.Beacon ibeacon = 1;
     */
    value: Beacon;
    case: "ibeacon";
  } | {
    /**
     * @generated from field: uint64 mac_address = 2;
     */
    value: bigint;
    case: "macAddress";
  } | {
    /**
     * @generated from field: int64 primary_key = 3;
     */
    value: bigint;
    case: "primaryKey";
  } | { case: undefined; value?: undefined };

  constructor(data?: PartialMessage<BeaconFilter>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "telemetry.v1.BeaconFilter";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): BeaconFilter;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): BeaconFilter;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): BeaconFilter;

  static equals(a: BeaconFilter | PlainMessage<BeaconFilter> | undefined, b: BeaconFilter | PlainMessage<BeaconFilter> | undefined): boolean;
}

/**
 * @generated from message telemetry.v1.GetBeaconLogsRequest
 */
export declare class GetBeaconLogsRequest extends Message<GetBeaconLogsRequest> {
  /**
   * @generated from field: repeated telemetry.v1.BeaconFilter beacons = 1;
   */
  beacons: BeaconFilter[];

  /**
   * @generated from field: google.protobuf.Timestamp start = 2;
   */
  start?: Timestamp;

  /**
   * @generated from field: google.protobuf.Timestamp end = 3;
   */
  end?: Timestamp;

  /**
   * Fetch temperature logs
   *
   * @generated from field: bool temperature_logs = 4;
   */
  temperatureLogs: boolean;

  /**
   * Fetch battery logs
   *
   * @generated from field: bool battery_logs = 5;
   */
  batteryLogs: boolean;

  /**
   * Fetch button press logs
   *
   * @generated from field: bool button_press_logs = 6;
   */
  buttonPressLogs: boolean;

  /**
   * Fetch movement logs
   *
   * @generated from field: bool movement_logs = 7;
   */
  movementLogs: boolean;

  constructor(data?: PartialMessage<GetBeaconLogsRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "telemetry.v1.GetBeaconLogsRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetBeaconLogsRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetBeaconLogsRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetBeaconLogsRequest;

  static equals(a: GetBeaconLogsRequest | PlainMessage<GetBeaconLogsRequest> | undefined, b: GetBeaconLogsRequest | PlainMessage<GetBeaconLogsRequest> | undefined): boolean;
}

/**
 * @generated from message telemetry.v1.GetBeaconLogsResponse
 */
export declare class GetBeaconLogsResponse extends Message<GetBeaconLogsResponse> {
  /**
   * Retrieved beacon logs
   *
   * @generated from field: map<int64, telemetry.v1.GetBeaconLogsResponse.BeaconLogs> beacon_logs = 1;
   */
  beaconLogs: { [key: string]: GetBeaconLogsResponse_BeaconLogs };

  constructor(data?: PartialMessage<GetBeaconLogsResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "telemetry.v1.GetBeaconLogsResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetBeaconLogsResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetBeaconLogsResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetBeaconLogsResponse;

  static equals(a: GetBeaconLogsResponse | PlainMessage<GetBeaconLogsResponse> | undefined, b: GetBeaconLogsResponse | PlainMessage<GetBeaconLogsResponse> | undefined): boolean;
}

/**
 * @generated from message telemetry.v1.GetBeaconLogsResponse.BeaconLogs
 */
export declare class GetBeaconLogsResponse_BeaconLogs extends Message<GetBeaconLogsResponse_BeaconLogs> {
  /**
   * @generated from field: telemetry.v1.Beacon beacon = 1;
   */
  beacon?: Beacon$1;

  /**
   * @generated from field: repeated telemetry.v1.TemperatureLog temperature = 2;
   */
  temperature: TemperatureLog[];

  /**
   * @generated from field: repeated telemetry.v1.BatteryLog battery = 3;
   */
  battery: BatteryLog[];

  /**
   * @generated from field: repeated telemetry.v1.ButtonPressLog button_press = 4;
   */
  buttonPress: ButtonPressLog[];

  /**
   * @generated from field: repeated telemetry.v1.MovementLog movement = 5;
   */
  movement: MovementLog[];

  constructor(data?: PartialMessage<GetBeaconLogsResponse_BeaconLogs>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "telemetry.v1.GetBeaconLogsResponse.BeaconLogs";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetBeaconLogsResponse_BeaconLogs;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetBeaconLogsResponse_BeaconLogs;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetBeaconLogsResponse_BeaconLogs;

  static equals(a: GetBeaconLogsResponse_BeaconLogs | PlainMessage<GetBeaconLogsResponse_BeaconLogs> | undefined, b: GetBeaconLogsResponse_BeaconLogs | PlainMessage<GetBeaconLogsResponse_BeaconLogs> | undefined): boolean;
}

/**
 * @generated from message telemetry.v1.GetLatestBeaconLogsResponse
 */
export declare class GetLatestBeaconLogsResponse extends Message<GetLatestBeaconLogsResponse> {
  /**
   * @generated from field: map<int64, telemetry.v1.GetLatestBeaconLogsResponse.LatestBeaconLogs> beacon_logs = 1;
   */
  beaconLogs: { [key: string]: GetLatestBeaconLogsResponse_LatestBeaconLogs };

  constructor(data?: PartialMessage<GetLatestBeaconLogsResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "telemetry.v1.GetLatestBeaconLogsResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetLatestBeaconLogsResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetLatestBeaconLogsResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetLatestBeaconLogsResponse;

  static equals(a: GetLatestBeaconLogsResponse | PlainMessage<GetLatestBeaconLogsResponse> | undefined, b: GetLatestBeaconLogsResponse | PlainMessage<GetLatestBeaconLogsResponse> | undefined): boolean;
}

/**
 * @generated from message telemetry.v1.GetLatestBeaconLogsResponse.LatestBeaconLogs
 */
export declare class GetLatestBeaconLogsResponse_LatestBeaconLogs extends Message<GetLatestBeaconLogsResponse_LatestBeaconLogs> {
  /**
   * @generated from field: telemetry.v1.Beacon beacon = 1;
   */
  beacon?: Beacon$1;

  /**
   * @generated from field: optional telemetry.v1.TemperatureLog temperature = 2;
   */
  temperature?: TemperatureLog;

  /**
   * @generated from field: optional telemetry.v1.BatteryLog battery = 3;
   */
  battery?: BatteryLog;

  /**
   * @generated from field: optional telemetry.v1.ButtonPressLog button_press = 4;
   */
  buttonPress?: ButtonPressLog;

  /**
   * @generated from field: optional telemetry.v1.MovementLog movement = 5;
   */
  movement?: MovementLog;

  constructor(data?: PartialMessage<GetLatestBeaconLogsResponse_LatestBeaconLogs>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "telemetry.v1.GetLatestBeaconLogsResponse.LatestBeaconLogs";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetLatestBeaconLogsResponse_LatestBeaconLogs;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetLatestBeaconLogsResponse_LatestBeaconLogs;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetLatestBeaconLogsResponse_LatestBeaconLogs;

  static equals(a: GetLatestBeaconLogsResponse_LatestBeaconLogs | PlainMessage<GetLatestBeaconLogsResponse_LatestBeaconLogs> | undefined, b: GetLatestBeaconLogsResponse_LatestBeaconLogs | PlainMessage<GetLatestBeaconLogsResponse_LatestBeaconLogs> | undefined): boolean;
}

/**
 * @generated from message telemetry.v1.GetLatestBeaconLogsRequest
 */
export declare class GetLatestBeaconLogsRequest extends Message<GetLatestBeaconLogsRequest> {
  /**
   * @generated from field: repeated telemetry.v1.BeaconFilter beacons = 1;
   */
  beacons: BeaconFilter[];

  constructor(data?: PartialMessage<GetLatestBeaconLogsRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "telemetry.v1.GetLatestBeaconLogsRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetLatestBeaconLogsRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetLatestBeaconLogsRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetLatestBeaconLogsRequest;

  static equals(a: GetLatestBeaconLogsRequest | PlainMessage<GetLatestBeaconLogsRequest> | undefined, b: GetLatestBeaconLogsRequest | PlainMessage<GetLatestBeaconLogsRequest> | undefined): boolean;
}

