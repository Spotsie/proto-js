// @generated by protoc-gen-es v1.3.1
// @generated from file telemetry/v1/telemetry.proto (package telemetry.v1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage, Timestamp } from "@bufbuild/protobuf";
import { Message, proto3 } from "@bufbuild/protobuf";
import type { Beacon as Beacon$1 } from "../../domain/v1/domain_pb.js";

/**
 * @generated from message telemetry.v1.TemperatureLog
 */
export declare class TemperatureLog extends Message<TemperatureLog> {
  /**
   * @generated from field: google.protobuf.Timestamp time = 1;
   */
  time?: Timestamp;

  /**
   * celsius
   *
   * @generated from field: int32 temperature = 2;
   */
  temperature: number;

  constructor(data?: PartialMessage<TemperatureLog>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "telemetry.v1.TemperatureLog";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TemperatureLog;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TemperatureLog;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TemperatureLog;

  static equals(a: TemperatureLog | PlainMessage<TemperatureLog> | undefined, b: TemperatureLog | PlainMessage<TemperatureLog> | undefined): boolean;
}

/**
 * @generated from message telemetry.v1.BatteryLog
 */
export declare class BatteryLog extends Message<BatteryLog> {
  /**
   * @generated from field: google.protobuf.Timestamp time = 1;
   */
  time?: Timestamp;

  /**
   * Volts
   *
   * @generated from field: float voltage = 2;
   */
  voltage: number;

  constructor(data?: PartialMessage<BatteryLog>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "telemetry.v1.BatteryLog";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): BatteryLog;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): BatteryLog;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): BatteryLog;

  static equals(a: BatteryLog | PlainMessage<BatteryLog> | undefined, b: BatteryLog | PlainMessage<BatteryLog> | undefined): boolean;
}

/**
 * @generated from message telemetry.v1.ButtonPressLog
 */
export declare class ButtonPressLog extends Message<ButtonPressLog> {
  /**
   * @generated from field: google.protobuf.Timestamp time = 1;
   */
  time?: Timestamp;

  /**
   * Identifier of the pressed button
   *
   * @generated from field: telemetry.v1.ButtonPressLog.Button button = 2;
   */
  button: ButtonPressLog_Button;

  constructor(data?: PartialMessage<ButtonPressLog>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "telemetry.v1.ButtonPressLog";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ButtonPressLog;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ButtonPressLog;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ButtonPressLog;

  static equals(a: ButtonPressLog | PlainMessage<ButtonPressLog> | undefined, b: ButtonPressLog | PlainMessage<ButtonPressLog> | undefined): boolean;
}

/**
 * @generated from enum telemetry.v1.ButtonPressLog.Button
 */
export declare enum ButtonPressLog_Button {
  /**
   * @generated from enum value: BUTTON_UNSPECIFIED = 0;
   */
  UNSPECIFIED = 0,

  /**
   * @generated from enum value: BUTTON_MAIN = 1;
   */
  MAIN = 1,

  /**
   * @generated from enum value: BUTTON_SECONDARY = 2;
   */
  SECONDARY = 2,
}

/**
 * @generated from message telemetry.v1.MovementLog
 */
export declare class MovementLog extends Message<MovementLog> {
  /**
   * @generated from field: google.protobuf.Timestamp time = 1;
   */
  time?: Timestamp;

  /**
   * @generated from field: bool has_moved = 2;
   */
  hasMoved: boolean;

  constructor(data?: PartialMessage<MovementLog>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "telemetry.v1.MovementLog";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): MovementLog;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): MovementLog;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): MovementLog;

  static equals(a: MovementLog | PlainMessage<MovementLog> | undefined, b: MovementLog | PlainMessage<MovementLog> | undefined): boolean;
}

/**
 * @generated from message telemetry.v1.Beacon
 */
export declare class Beacon extends Message<Beacon> {
  /**
   * @generated from field: optional domain.v1.Beacon ibeacon = 1;
   */
  ibeacon?: Beacon$1;

  /**
   * @generated from field: optional int64 mac_address = 2;
   */
  macAddress?: bigint;

  /**
   * @generated from field: int64 primary_key = 3;
   */
  primaryKey: bigint;

  constructor(data?: PartialMessage<Beacon>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "telemetry.v1.Beacon";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Beacon;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Beacon;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Beacon;

  static equals(a: Beacon | PlainMessage<Beacon> | undefined, b: Beacon | PlainMessage<Beacon> | undefined): boolean;
}

