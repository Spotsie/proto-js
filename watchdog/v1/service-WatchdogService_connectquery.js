// @generated by protoc-gen-connect-query v0.1.0
// @generated from file watchdog/v1/service.proto (package watchdog.v1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import { createQueryService } from "@bufbuild/connect-query";
import { MethodKind } from "@bufbuild/protobuf";
import { CreateJobRequest, CreateJobResponse, CreateSubjectGroupRequest, CreateSubjectGroupResponse, DeleteJobRequest, DeleteJobResponse, GetEventsRequest, GetEventsResponse, GetJobsRequest, GetJobsResponse, GetSubjectGroupsRequest, GetSubjectGroupsResponse, UpdateSubjectGroupRequest, UpdateSubjectGroupResponse } from "./service_pb.js";

export const typeName = "watchdog.v1.WatchdogService";

/**
 * @generated from rpc watchdog.v1.WatchdogService.GetJobs
 */
export const getJobs = createQueryService({
  service: {
    methods: {
      getJobs: {
        name: "GetJobs",
        kind: MethodKind.Unary,
        I: GetJobsRequest,
        O: GetJobsResponse,
      },
    },
    typeName: "watchdog.v1.WatchdogService",
  },
}).getJobs;

/**
 * @generated from rpc watchdog.v1.WatchdogService.CreateJob
 */
export const createJob = createQueryService({
  service: {
    methods: {
      createJob: {
        name: "CreateJob",
        kind: MethodKind.Unary,
        I: CreateJobRequest,
        O: CreateJobResponse,
      },
    },
    typeName: "watchdog.v1.WatchdogService",
  },
}).createJob;

/**
 * rpc UpdateJob(UpdateJobRequest) returns (UpdateJobResponse);
 *
 * @generated from rpc watchdog.v1.WatchdogService.DeleteJob
 */
export const deleteJob = createQueryService({
  service: {
    methods: {
      deleteJob: {
        name: "DeleteJob",
        kind: MethodKind.Unary,
        I: DeleteJobRequest,
        O: DeleteJobResponse,
      },
    },
    typeName: "watchdog.v1.WatchdogService",
  },
}).deleteJob;

/**
 * @generated from rpc watchdog.v1.WatchdogService.GetSubjectGroups
 */
export const getSubjectGroups = createQueryService({
  service: {
    methods: {
      getSubjectGroups: {
        name: "GetSubjectGroups",
        kind: MethodKind.Unary,
        I: GetSubjectGroupsRequest,
        O: GetSubjectGroupsResponse,
      },
    },
    typeName: "watchdog.v1.WatchdogService",
  },
}).getSubjectGroups;

/**
 * @generated from rpc watchdog.v1.WatchdogService.CreateSubjectGroup
 */
export const createSubjectGroup = createQueryService({
  service: {
    methods: {
      createSubjectGroup: {
        name: "CreateSubjectGroup",
        kind: MethodKind.Unary,
        I: CreateSubjectGroupRequest,
        O: CreateSubjectGroupResponse,
      },
    },
    typeName: "watchdog.v1.WatchdogService",
  },
}).createSubjectGroup;

/**
 * rpc DeleteSubjectGroup(DeleteJobRequest) returns (DeleteJobResponse);
 *
 * @generated from rpc watchdog.v1.WatchdogService.UpdateSubjectGroup
 */
export const updateSubjectGroup = createQueryService({
  service: {
    methods: {
      updateSubjectGroup: {
        name: "UpdateSubjectGroup",
        kind: MethodKind.Unary,
        I: UpdateSubjectGroupRequest,
        O: UpdateSubjectGroupResponse,
      },
    },
    typeName: "watchdog.v1.WatchdogService",
  },
}).updateSubjectGroup;

/**
 * @generated from rpc watchdog.v1.WatchdogService.GetEvents
 */
export const getEvents = createQueryService({
  service: {
    methods: {
      getEvents: {
        name: "GetEvents",
        kind: MethodKind.Unary,
        I: GetEventsRequest,
        O: GetEventsResponse,
      },
    },
    typeName: "watchdog.v1.WatchdogService",
  },
}).getEvents;
