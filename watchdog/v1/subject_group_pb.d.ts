// @generated by protoc-gen-es v1.1.1
// @generated from file watchdog/v1/subject_group.proto (package watchdog.v1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3 } from "@bufbuild/protobuf";
import type { Audit } from "../../domain/v1/domain_pb.js";

/**
 * @generated from message watchdog.v1.SubjectGroup
 */
export declare class SubjectGroup extends Message<SubjectGroup> {
  /**
   * @generated from field: int32 id = 1;
   */
  id: number;

  /**
   * @generated from field: string name = 2;
   */
  name: string;

  /**
   * @generated from field: int32 namespace_id = 3;
   */
  namespaceId: number;

  /**
   * @generated from field: string description = 4;
   */
  description: string;

  /**
   * @generated from field: repeated int32 subject_ids = 5;
   */
  subjectIds: number[];

  /**
   * @generated from field: domain.v1.Audit audit = 6;
   */
  audit?: Audit;

  constructor(data?: PartialMessage<SubjectGroup>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "watchdog.v1.SubjectGroup";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SubjectGroup;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SubjectGroup;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SubjectGroup;

  static equals(a: SubjectGroup | PlainMessage<SubjectGroup> | undefined, b: SubjectGroup | PlainMessage<SubjectGroup> | undefined): boolean;
}

